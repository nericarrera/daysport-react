generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id          String          @id @default(cuid())
  email       String       @unique
  password    String
  name        String?
  phone       String?
  address     String?
  birthDate   DateTime?    @map("birth_date")
  createdAt   DateTime     @default(now()) @map("created_at")
  postalCode  String?      @map("postal_code")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  carts       Cart?
  resetTokens ResetToken[]
}

model Product {
  id                 String        @id @default(cuid())
  newId       String?    @unique // ‚Üê NUEVO CAMPO TEMPORAL
  name               String
  price              Float
  description        String?
  category           String
  images             String[]
  stock              Int        @default(0)
  colors             String[]
  featured           Boolean    @default(false)
  originalPrice      Float?     @map("original_price")
  sizes              String[]
  subcategory        String?
  brand              String?
  createdAt          DateTime   @default(now()) @map("created_at")
  discountPercentage Int?       @map("discount_percentage")
  inStock            Boolean    @default(true) @map("in_stock")
  mainImage          String     @map("main_image")
  rating             Float?     @default(0)
  reviewCount        Int?       @default(0) @map("review_count")
  specifications     Json?
  stockQuantity      Int?       @map("stock_quantity")
  updatedAt          DateTime   @updatedAt @map("updated_at")
  fit                String?
  measurements       Json?
  sizeGuide          Json?      @map("size_guide")
  colorImages        Json?      @map("color_images")
  detailImages       String[]   @default([]) @map("detail_images")
  cartItems          CartItem[]
}

model CartItem {
  id        String     @id @default(cuid())
  cartId    Int
  productId Int
  quantity  Int
  cart      Cart    @relation(fields: [cartId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@unique([cartId, productId], name: "cartId_productId")
}

model Cart {
  id       String        @id @default(cuid())
  userId   Int        @unique
  user     User       @relation(fields: [userId], references: [id])
  CartItem CartItem[]
}

model ResetToken {
  id      Int      @id @default(autoincrement())
  token   String   @unique
  userId  Int
  expires DateTime
  user    User     @relation(fields: [userId], references: [id])
}

model SizeGuide {
  id          String      @id @default(cuid())
  category    String
  subcategory String?
  measures    Json
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
