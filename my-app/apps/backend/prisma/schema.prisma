generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  password   String
  name       String?
  phone      String?
  address    String?
  postalCode String?
  birthDate  DateTime?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  resetTokens ResetToken[]
  carts       Cart[]     // Relación inversa hacia Cart
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String
  price       Float
  description String?
  images      String[]
  category    String   // 'mujer', 'hombre', 'niños', 'accesorios'
  subcategory String   // 'remeras', 'shorts', 'calzas', 'buzos'
  stock       Int        @default(0)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  cartItems   CartItem[]
}

model Cart {
  id       Int        @id @default(autoincrement())
  user     User       @relation(fields: [userId], references: [id])
  userId   Int        @unique
  CartItem CartItem[]
}

model CartItem {
  id        Int @id @default(autoincrement())
  cartId    Int
  productId Int
  quantity  Int

  cart    Cart    @relation(fields: [cartId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@unique([cartId, productId], name: "cartId_productId")
}

model ResetToken {
  id      Int      @id @default(autoincrement())
  token   String   @unique
  userId  Int
  expires DateTime
  user    User     @relation(fields: [userId], references: [id])
}