generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  password   String
  name       String?
  phone      String?
  address    String?
  postalCode String?     @map("postal_code")
  birthDate  DateTime?   @map("birth_date")
  createdAt  DateTime    @default(now()) @map("created_at")
  updatedAt  DateTime    @updatedAt @map("updated_at")

  resetTokens ResetToken[]
  carts       Cart[]
}

model Product {
  // CAMBIO PRINCIPAL: De Int a String
  id          String     @id @default(cuid()) // Temporal, luego usaremos nuestro propio generator
  name        String
  description String?
  price       Float
  originalPrice      Float?    @map("original_price")
  images      String[]
  mainImage   String     @map("main_image")
  stock       Int        @default(0)
  stockQuantity Int?     @map("stock_quantity")
  category    String
  subcategory String?
  brand       String?
  featured    Boolean    @default(false)
  discountPercentage Int? @map("discount_percentage")
  rating      Float?     @default(0)
  reviewCount Int?       @map("review_count") @default(0)
  specifications Json?
  sizes       String[]
  colors      String[]
  detailImages String[]  @map("detail_images") @default([])
  colorImages  Json?     @map("color_images")
  inStock     Boolean    @map("in_stock") @default(true)
  
  // CAMPOS DE MEDIDAS
  sizeGuide    Json?   @map("size_guide")
  measurements Json?
  fit          String?
  
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime   @updatedAt @map("updated_at")
  cartItems   CartItem[]
}

// ACTUALIZAR las relaciones que usaban Product.id como Int
model CartItem {
  id        Int @id @default(autoincrement())
  cartId    Int
  // CAMBIO: productId ahora es String
  productId String
  quantity  Int

  cart    Cart    @relation(fields: [cartId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@unique([cartId, productId], name: "cartId_productId")
}

model Cart {
  id       Int        @id @default(autoincrement())
  user     User       @relation(fields: [userId], references: [id])
  userId   Int        @unique
  CartItem CartItem[]
}

model ResetToken {
  id      Int      @id @default(autoincrement())
  token   String   @unique
  userId  Int
  expires DateTime
  user    User     @relation(fields: [userId], references: [id])
}

model SizeGuide {
  id          Int      @id @default(autoincrement())
  category    String
  subcategory String?
  measures    Json
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}