"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/registrarse/page",{

/***/ "(app-pages-browser)/./utils/api.ts":
/*!**********************!*\
  !*** ./utils/api.ts ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_BASE_URL: () => (/* binding */ API_BASE_URL),\n/* harmony export */   ENDPOINTS: () => (/* binding */ ENDPOINTS),\n/* harmony export */   apiAuth: () => (/* binding */ apiAuth),\n/* harmony export */   apiFetch: () => (/* binding */ apiFetch),\n/* harmony export */   checkBackendConnection: () => (/* binding */ checkBackendConnection),\n/* harmony export */   getAuthToken: () => (/* binding */ getAuthToken)\n/* harmony export */ });\nconst API_BASE_URL = \"http://localhost:3001\" || 0;\nconst ENDPOINTS = {\n    login: \"/auth/login\",\n    register: \"/users\",\n    profile: \"/users/profile\",\n    sendResetPassword: \"/auth/send-reset-password\",\n    resetPassword: \"/auth/reset-password\"\n};\n// Función genérica SIMPLIFICADA para evitar bucles de error\nasync function apiFetch(endpoint) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const controller = new AbortController();\n    const timeoutId = setTimeout(()=>controller.abort(), 10000); // 10 segundos\n    try {\n        const url = \"\".concat(API_BASE_URL).concat(endpoint);\n        console.log(\"\\uD83D\\uDD04 API Call: \".concat(options.method || 'GET', \" \").concat(url));\n        // Opciones básicas sin verificación previa\n        const res = await fetch(url, {\n            ...options,\n            signal: controller.signal,\n            headers: {\n                'Content-Type': 'application/json',\n                ...options.headers\n            },\n            mode: 'cors'\n        });\n        clearTimeout(timeoutId);\n        // Verificar si la respuesta es JSON\n        const contentType = res.headers.get('content-type');\n        let data;\n        if (contentType === null || contentType === void 0 ? void 0 : contentType.includes('application/json')) {\n            try {\n                data = await res.json();\n            } catch (jsonError) {\n                console.error('❌ Error parsing JSON:', jsonError);\n                throw new Error(\"Error parsing JSON response: \".concat(res.status, \" \").concat(res.statusText));\n            }\n        } else {\n            data = await res.text();\n        }\n        if (!res.ok) {\n            const errorMessage = typeof data === 'object' ? (data === null || data === void 0 ? void 0 : data.message) || \"Error \".concat(res.status, \": \").concat(res.statusText) : \"Error \".concat(res.status, \": \").concat(data);\n            throw new Error(errorMessage);\n        }\n        console.log(\"✅ API Success: \".concat(options.method || 'GET', \" \").concat(endpoint, \" - Status: \").concat(res.status));\n        return data;\n    } catch (error) {\n        clearTimeout(timeoutId);\n        if (error instanceof Error) {\n            if (error.name === 'AbortError') {\n                throw new Error('Timeout: El servidor no respondió en 10 segundos');\n            }\n            // Mensajes de error más específicos\n            if (error.message.includes('Failed to fetch')) {\n                throw new Error(\"No se pudo conectar al servidor backend. Verifica que:\\n        1. El servidor NestJS est\\xe9 corriendo en puerto 3001\\n        2. La URL sea correcta: \".concat(API_BASE_URL, \"\\n        3. No haya problemas de firewall o red\"));\n            }\n            throw error;\n        } else {\n            throw new Error('Error desconocido en la API');\n        }\n    }\n}\n// Funciones específicas\nconst apiAuth = {\n    login: (credentials)=>apiFetch(ENDPOINTS.login, {\n            method: 'POST',\n            body: JSON.stringify(credentials)\n        }),\n    register: (userData)=>apiFetch(ENDPOINTS.register, {\n            method: 'POST',\n            body: JSON.stringify(userData)\n        }),\n    getProfile: (token)=>apiFetch(ENDPOINTS.profile, {\n            headers: {\n                'Authorization': \"Bearer \".concat(token),\n                'Content-Type': 'application/json'\n            }\n        })\n};\n// Función de diagnóstico INDEPENDIENTE\nconst checkBackendConnection = async ()=>{\n    try {\n        const controller = new AbortController();\n        const timeoutId = setTimeout(()=>controller.abort(), 3000);\n        const response = await fetch(API_BASE_URL, {\n            method: 'GET',\n            signal: controller.signal,\n            mode: 'cors'\n        });\n        clearTimeout(timeoutId);\n        return {\n            connected: response.ok\n        };\n    } catch (error) {\n        if (error instanceof Error) {\n            return {\n                connected: false,\n                error: error.name === 'AbortError' ? 'Timeout: El backend no respondió en 3 segundos' : \"Error de conexi\\xf3n: \".concat(error.message)\n            };\n        }\n        return {\n            connected: false,\n            error: 'Error desconocido de conexión'\n        };\n    }\n};\nconst getAuthToken = ()=>{\n    if (true) {\n        return localStorage.getItem('token');\n    }\n    return null;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils/api.ts\n"));

/***/ })

});