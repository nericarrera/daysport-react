"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/accesorios/page",{

/***/ "(app-pages-browser)/./services/productService.ts":
/*!************************************!*\
  !*** ./services/productService.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProductService: () => (/* binding */ ProductService)\n/* harmony export */ });\n// Configuración base de la API\nconst API_BASE_URL = \"http://localhost:3000/api\" || 0;\nclass ProductService {\n    // Headers comunes para todas las peticiones\n    static getHeaders() {\n        return {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        };\n    }\n    // Método común para manejar peticiones fetch\n    static async fetchApi(endpoint) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const url = \"\".concat(API_BASE_URL).concat(endpoint);\n        try {\n            const response = await fetch(url, {\n                headers: this.getHeaders(),\n                ...options\n            });\n            if (!response.ok) {\n                throw new Error(\"HTTP error! status: \".concat(response.status));\n            }\n            return await response.json();\n        } catch (error) {\n            console.error(\"Error fetching \".concat(endpoint, \":\"), error);\n            throw error; // Relanzamos el error para que el caller pueda manejarlo\n        }\n    }\n    // Obtener productos por categoría\n    static async getProductsByCategory(category) {\n        try {\n            return await this.fetchApi(\"/products?category=\".concat(encodeURIComponent(category)));\n        } catch (error) {\n            console.error('Error fetching products by category:', error);\n            return []; // Retorna array vacío en caso de error\n        }\n    }\n    // Obtener producto por ID\n    static async getProductById(id) {\n        try {\n            return await this.fetchApi(\"/products/\".concat(id));\n        } catch (error) {\n            console.error('Error fetching product by id:', error);\n            return null;\n        }\n    }\n    // Obtener todos los productos (opcional)\n    static async getAllProducts() {\n        try {\n            return await this.fetchApi('/products');\n        } catch (error) {\n            console.error('Error fetching all products:', error);\n            return [];\n        }\n    }\n    // Obtener productos destacados (opcional)\n    static async getFeaturedProducts() {\n        try {\n            return await this.fetchApi('/products?featured=true');\n        } catch (error) {\n            console.error('Error fetching featured products:', error);\n            return [];\n        }\n    }\n    // Buscar productos (opcional)\n    static async searchProducts(query) {\n        try {\n            return await this.fetchApi(\"/products/search?q=\".concat(encodeURIComponent(query)));\n        } catch (error) {\n            console.error('Error searching products:', error);\n            return [];\n        }\n    }\n    // Obtener productos con paginación (opcional)\n    static async getProductsPaginated() {\n        let page = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1, limit = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 10;\n        try {\n            return await this.fetchApi(\"/products?page=\".concat(page, \"&limit=\").concat(limit));\n        } catch (error) {\n            console.error('Error fetching paginated products:', error);\n            return {\n                products: [],\n                totalPages: 0,\n                currentPage: page,\n                totalProducts: 0\n            };\n        }\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NlcnZpY2VzL3Byb2R1Y3RTZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFFQSwrQkFBK0I7QUFDL0IsTUFBTUEsZUFBZUMsMkJBQStCLElBQUksQ0FBMkI7QUFFNUUsTUFBTUc7SUFDWCw0Q0FBNEM7SUFDNUMsT0FBZUMsYUFBMEI7UUFDdkMsT0FBTztZQUNMLGdCQUFnQjtZQUNoQixVQUFVO1FBQ1o7SUFDRjtJQUVBLDZDQUE2QztJQUM3QyxhQUFxQkMsU0FBU0MsUUFBZ0IsRUFBNkI7WUFBM0JDLFVBQUFBLGlFQUF1QixDQUFDO1FBQ3RFLE1BQU1DLE1BQU0sR0FBa0JGLE9BQWZQLGNBQXdCLE9BQVRPO1FBRTlCLElBQUk7WUFDRixNQUFNRyxXQUFXLE1BQU1DLE1BQU1GLEtBQUs7Z0JBQ2hDRyxTQUFTLElBQUksQ0FBQ1AsVUFBVTtnQkFDeEIsR0FBR0csT0FBTztZQUNaO1lBRUEsSUFBSSxDQUFDRSxTQUFTRyxFQUFFLEVBQUU7Z0JBQ2hCLE1BQU0sSUFBSUMsTUFBTSx1QkFBdUMsT0FBaEJKLFNBQVNLLE1BQU07WUFDeEQ7WUFFQSxPQUFPLE1BQU1MLFNBQVNNLElBQUk7UUFDNUIsRUFBRSxPQUFPQyxPQUFPO1lBQ2RDLFFBQVFELEtBQUssQ0FBQyxrQkFBMkIsT0FBVFYsVUFBUyxNQUFJVTtZQUM3QyxNQUFNQSxPQUFPLHlEQUF5RDtRQUN4RTtJQUNGO0lBRUEsa0NBQWtDO0lBQ2xDLGFBQWFFLHNCQUFzQkMsUUFBZ0IsRUFBc0I7UUFDdkUsSUFBSTtZQUNGLE9BQU8sTUFBTSxJQUFJLENBQUNkLFFBQVEsQ0FBQyxzQkFBbUQsT0FBN0JlLG1CQUFtQkQ7UUFDdEUsRUFBRSxPQUFPSCxPQUFPO1lBQ2RDLFFBQVFELEtBQUssQ0FBQyx3Q0FBd0NBO1lBQ3RELE9BQU8sRUFBRSxFQUFFLHVDQUF1QztRQUNwRDtJQUNGO0lBRUEsMEJBQTBCO0lBQzFCLGFBQWFLLGVBQWVDLEVBQVUsRUFBMkI7UUFDL0QsSUFBSTtZQUNGLE9BQU8sTUFBTSxJQUFJLENBQUNqQixRQUFRLENBQUMsYUFBZ0IsT0FBSGlCO1FBQzFDLEVBQUUsT0FBT04sT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsaUNBQWlDQTtZQUMvQyxPQUFPO1FBQ1Q7SUFDRjtJQUVBLHlDQUF5QztJQUN6QyxhQUFhTyxpQkFBcUM7UUFDaEQsSUFBSTtZQUNGLE9BQU8sTUFBTSxJQUFJLENBQUNsQixRQUFRLENBQUM7UUFDN0IsRUFBRSxPQUFPVyxPQUFPO1lBQ2RDLFFBQVFELEtBQUssQ0FBQyxnQ0FBZ0NBO1lBQzlDLE9BQU8sRUFBRTtRQUNYO0lBQ0Y7SUFFQSwwQ0FBMEM7SUFDMUMsYUFBYVEsc0JBQTBDO1FBQ3JELElBQUk7WUFDRixPQUFPLE1BQU0sSUFBSSxDQUFDbkIsUUFBUSxDQUFDO1FBQzdCLEVBQUUsT0FBT1csT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMscUNBQXFDQTtZQUNuRCxPQUFPLEVBQUU7UUFDWDtJQUNGO0lBRUEsOEJBQThCO0lBQzlCLGFBQWFTLGVBQWVDLEtBQWEsRUFBc0I7UUFDN0QsSUFBSTtZQUNGLE9BQU8sTUFBTSxJQUFJLENBQUNyQixRQUFRLENBQUMsc0JBQWdELE9BQTFCZSxtQkFBbUJNO1FBQ3RFLEVBQUUsT0FBT1YsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsNkJBQTZCQTtZQUMzQyxPQUFPLEVBQUU7UUFDWDtJQUNGO0lBRUEsOENBQThDO0lBQzlDLGFBQWFXLHVCQUtWO1lBTCtCQyxPQUFBQSxpRUFBZSxHQUFHQyxRQUFBQSxpRUFBZ0I7UUFNbEUsSUFBSTtZQUNGLE9BQU8sTUFBTSxJQUFJLENBQUN4QixRQUFRLENBQUMsa0JBQWdDd0IsT0FBZEQsTUFBSyxXQUFlLE9BQU5DO1FBQzdELEVBQUUsT0FBT2IsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsc0NBQXNDQTtZQUNwRCxPQUFPO2dCQUNMYyxVQUFVLEVBQUU7Z0JBQ1pDLFlBQVk7Z0JBQ1pDLGFBQWFKO2dCQUNiSyxlQUFlO1lBQ2pCO1FBQ0Y7SUFDRjtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXG5lcmlwXFxEb2N1bWVudHNcXGRheXNwb3J0LXJlYWN0XFxteS1hcHBcXGFwcHNcXGZyb250ZW5kXFxzZXJ2aWNlc1xccHJvZHVjdFNlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvZHVjdCB9IGZyb20gJy4uL2FwcC90eXBlcy9wcm9kdWN0JztcclxuXHJcbi8vIENvbmZpZ3VyYWNpw7NuIGJhc2UgZGUgbGEgQVBJXHJcbmNvbnN0IEFQSV9CQVNFX1VSTCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FQSV9VUkwgfHwgJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGknO1xyXG5cclxuZXhwb3J0IGNsYXNzIFByb2R1Y3RTZXJ2aWNlIHtcclxuICAvLyBIZWFkZXJzIGNvbXVuZXMgcGFyYSB0b2RhcyBsYXMgcGV0aWNpb25lc1xyXG4gIHByaXZhdGUgc3RhdGljIGdldEhlYWRlcnMoKTogSGVhZGVyc0luaXQge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICAvLyBNw6l0b2RvIGNvbcO6biBwYXJhIG1hbmVqYXIgcGV0aWNpb25lcyBmZXRjaFxyXG4gIHByaXZhdGUgc3RhdGljIGFzeW5jIGZldGNoQXBpKGVuZHBvaW50OiBzdHJpbmcsIG9wdGlvbnM6IFJlcXVlc3RJbml0ID0ge30pIHtcclxuICAgIGNvbnN0IHVybCA9IGAke0FQSV9CQVNFX1VSTH0ke2VuZHBvaW50fWA7XHJcbiAgICBcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCB7XHJcbiAgICAgICAgaGVhZGVyczogdGhpcy5nZXRIZWFkZXJzKCksXHJcbiAgICAgICAgLi4ub3B0aW9uc1xyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEhUVFAgZXJyb3IhIHN0YXR1czogJHtyZXNwb25zZS5zdGF0dXN9YCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJldHVybiBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKGBFcnJvciBmZXRjaGluZyAke2VuZHBvaW50fTpgLCBlcnJvcik7XHJcbiAgICAgIHRocm93IGVycm9yOyAvLyBSZWxhbnphbW9zIGVsIGVycm9yIHBhcmEgcXVlIGVsIGNhbGxlciBwdWVkYSBtYW5lamFybG9cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIE9idGVuZXIgcHJvZHVjdG9zIHBvciBjYXRlZ29yw61hXHJcbiAgc3RhdGljIGFzeW5jIGdldFByb2R1Y3RzQnlDYXRlZ29yeShjYXRlZ29yeTogc3RyaW5nKTogUHJvbWlzZTxQcm9kdWN0W10+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIHJldHVybiBhd2FpdCB0aGlzLmZldGNoQXBpKGAvcHJvZHVjdHM/Y2F0ZWdvcnk9JHtlbmNvZGVVUklDb21wb25lbnQoY2F0ZWdvcnkpfWApO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgcHJvZHVjdHMgYnkgY2F0ZWdvcnk6JywgZXJyb3IpO1xyXG4gICAgICByZXR1cm4gW107IC8vIFJldG9ybmEgYXJyYXkgdmFjw61vIGVuIGNhc28gZGUgZXJyb3JcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIE9idGVuZXIgcHJvZHVjdG8gcG9yIElEXHJcbiAgc3RhdGljIGFzeW5jIGdldFByb2R1Y3RCeUlkKGlkOiBudW1iZXIpOiBQcm9taXNlPFByb2R1Y3QgfCBudWxsPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICByZXR1cm4gYXdhaXQgdGhpcy5mZXRjaEFwaShgL3Byb2R1Y3RzLyR7aWR9YCk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBwcm9kdWN0IGJ5IGlkOicsIGVycm9yKTtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBPYnRlbmVyIHRvZG9zIGxvcyBwcm9kdWN0b3MgKG9wY2lvbmFsKVxyXG4gIHN0YXRpYyBhc3luYyBnZXRBbGxQcm9kdWN0cygpOiBQcm9taXNlPFByb2R1Y3RbXT4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuZmV0Y2hBcGkoJy9wcm9kdWN0cycpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgYWxsIHByb2R1Y3RzOicsIGVycm9yKTtcclxuICAgICAgcmV0dXJuIFtdO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gT2J0ZW5lciBwcm9kdWN0b3MgZGVzdGFjYWRvcyAob3BjaW9uYWwpXHJcbiAgc3RhdGljIGFzeW5jIGdldEZlYXR1cmVkUHJvZHVjdHMoKTogUHJvbWlzZTxQcm9kdWN0W10+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIHJldHVybiBhd2FpdCB0aGlzLmZldGNoQXBpKCcvcHJvZHVjdHM/ZmVhdHVyZWQ9dHJ1ZScpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgZmVhdHVyZWQgcHJvZHVjdHM6JywgZXJyb3IpO1xyXG4gICAgICByZXR1cm4gW107XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBCdXNjYXIgcHJvZHVjdG9zIChvcGNpb25hbClcclxuICBzdGF0aWMgYXN5bmMgc2VhcmNoUHJvZHVjdHMocXVlcnk6IHN0cmluZyk6IFByb21pc2U8UHJvZHVjdFtdPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICByZXR1cm4gYXdhaXQgdGhpcy5mZXRjaEFwaShgL3Byb2R1Y3RzL3NlYXJjaD9xPSR7ZW5jb2RlVVJJQ29tcG9uZW50KHF1ZXJ5KX1gKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHNlYXJjaGluZyBwcm9kdWN0czonLCBlcnJvcik7XHJcbiAgICAgIHJldHVybiBbXTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIE9idGVuZXIgcHJvZHVjdG9zIGNvbiBwYWdpbmFjacOzbiAob3BjaW9uYWwpXHJcbiAgc3RhdGljIGFzeW5jIGdldFByb2R1Y3RzUGFnaW5hdGVkKHBhZ2U6IG51bWJlciA9IDEsIGxpbWl0OiBudW1iZXIgPSAxMCk6IFByb21pc2U8e1xyXG4gICAgcHJvZHVjdHM6IFByb2R1Y3RbXTtcclxuICAgIHRvdGFsUGFnZXM6IG51bWJlcjtcclxuICAgIGN1cnJlbnRQYWdlOiBudW1iZXI7XHJcbiAgICB0b3RhbFByb2R1Y3RzOiBudW1iZXI7XHJcbiAgfT4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuZmV0Y2hBcGkoYC9wcm9kdWN0cz9wYWdlPSR7cGFnZX0mbGltaXQ9JHtsaW1pdH1gKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIHBhZ2luYXRlZCBwcm9kdWN0czonLCBlcnJvcik7XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgcHJvZHVjdHM6IFtdLFxyXG4gICAgICAgIHRvdGFsUGFnZXM6IDAsXHJcbiAgICAgICAgY3VycmVudFBhZ2U6IHBhZ2UsXHJcbiAgICAgICAgdG90YWxQcm9kdWN0czogMFxyXG4gICAgICB9O1xyXG4gICAgfVxyXG4gIH1cclxufSJdLCJuYW1lcyI6WyJBUElfQkFTRV9VUkwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfQVBJX1VSTCIsIlByb2R1Y3RTZXJ2aWNlIiwiZ2V0SGVhZGVycyIsImZldGNoQXBpIiwiZW5kcG9pbnQiLCJvcHRpb25zIiwidXJsIiwicmVzcG9uc2UiLCJmZXRjaCIsImhlYWRlcnMiLCJvayIsIkVycm9yIiwic3RhdHVzIiwianNvbiIsImVycm9yIiwiY29uc29sZSIsImdldFByb2R1Y3RzQnlDYXRlZ29yeSIsImNhdGVnb3J5IiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiZ2V0UHJvZHVjdEJ5SWQiLCJpZCIsImdldEFsbFByb2R1Y3RzIiwiZ2V0RmVhdHVyZWRQcm9kdWN0cyIsInNlYXJjaFByb2R1Y3RzIiwicXVlcnkiLCJnZXRQcm9kdWN0c1BhZ2luYXRlZCIsInBhZ2UiLCJsaW1pdCIsInByb2R1Y3RzIiwidG90YWxQYWdlcyIsImN1cnJlbnRQYWdlIiwidG90YWxQcm9kdWN0cyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./services/productService.ts\n"));

/***/ })

});