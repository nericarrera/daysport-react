"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./services/productService.ts":
/*!************************************!*\
  !*** ./services/productService.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProductService: () => (/* binding */ ProductService)\n/* harmony export */ });\n/* __next_internal_client_entry_do_not_use__ ProductService auto */ class ProductService {\n    // Asegúrate de que esta función esté definida como static\n    static async getProductsByCategory(category) {\n        try {\n            const response = await fetch(\"http://localhost:3001/products?category=\".concat(category));\n            if (!response.ok) return [];\n            return await response.json();\n        } catch (error) {\n            console.error('Error fetching products by category:', error);\n            return [];\n        }\n    }\n    static async getProductById(id) {\n        try {\n            const response = await fetch(\"http://localhost:3001/products/\".concat(id));\n            if (!response.ok) return null;\n            return await response.json();\n        } catch (error) {\n            console.error('Error fetching product:', error);\n            return null;\n        }\n    }\n    // Opcional: Método para obtener todos los productos\n    static async getAllProducts() {\n        try {\n            const response = await fetch('http://localhost:3001/products');\n            if (!response.ok) return [];\n            return await response.json();\n        } catch (error) {\n            console.error('Error fetching all products:', error);\n            return [];\n        }\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NlcnZpY2VzL3Byb2R1Y3RTZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7b0VBR08sTUFBTUE7SUFDWCwwREFBMEQ7SUFDMUQsYUFBYUMsc0JBQXNCQyxRQUFnQixFQUFzQjtRQUN2RSxJQUFJO1lBQ0YsTUFBTUMsV0FBVyxNQUFNQyxNQUFNLDJDQUFvRCxPQUFURjtZQUN4RSxJQUFJLENBQUNDLFNBQVNFLEVBQUUsRUFBRSxPQUFPLEVBQUU7WUFDM0IsT0FBTyxNQUFNRixTQUFTRyxJQUFJO1FBQzVCLEVBQUUsT0FBT0MsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsd0NBQXdDQTtZQUN0RCxPQUFPLEVBQUU7UUFDWDtJQUNGO0lBRUEsYUFBYUUsZUFBZUMsRUFBVSxFQUEyQjtRQUMvRCxJQUFJO1lBQ0YsTUFBTVAsV0FBVyxNQUFNQyxNQUFNLGtDQUFxQyxPQUFITTtZQUMvRCxJQUFJLENBQUNQLFNBQVNFLEVBQUUsRUFBRSxPQUFPO1lBQ3pCLE9BQU8sTUFBTUYsU0FBU0csSUFBSTtRQUM1QixFQUFFLE9BQU9DLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLDJCQUEyQkE7WUFDekMsT0FBTztRQUNUO0lBQ0Y7SUFFQSxvREFBb0Q7SUFDcEQsYUFBYUksaUJBQXFDO1FBQ2hELElBQUk7WUFDRixNQUFNUixXQUFXLE1BQU1DLE1BQU07WUFDN0IsSUFBSSxDQUFDRCxTQUFTRSxFQUFFLEVBQUUsT0FBTyxFQUFFO1lBQzNCLE9BQU8sTUFBTUYsU0FBU0csSUFBSTtRQUM1QixFQUFFLE9BQU9DLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLGdDQUFnQ0E7WUFDOUMsT0FBTyxFQUFFO1FBQ1g7SUFDRjtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXG5lcmlwXFxEb2N1bWVudHNcXGRheXNwb3J0LXJlYWN0XFxteS1hcHBcXGFwcHNcXGZyb250ZW5kXFxzZXJ2aWNlc1xccHJvZHVjdFNlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xyXG5pbXBvcnQgeyBQcm9kdWN0IH0gZnJvbSAnLi4vYXBwL1R5cGVzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBQcm9kdWN0U2VydmljZSB7XHJcbiAgLy8gQXNlZ8O6cmF0ZSBkZSBxdWUgZXN0YSBmdW5jacOzbiBlc3TDqSBkZWZpbmlkYSBjb21vIHN0YXRpY1xyXG4gIHN0YXRpYyBhc3luYyBnZXRQcm9kdWN0c0J5Q2F0ZWdvcnkoY2F0ZWdvcnk6IHN0cmluZyk6IFByb21pc2U8UHJvZHVjdFtdPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGBodHRwOi8vbG9jYWxob3N0OjMwMDEvcHJvZHVjdHM/Y2F0ZWdvcnk9JHtjYXRlZ29yeX1gKTtcclxuICAgICAgaWYgKCFyZXNwb25zZS5vaykgcmV0dXJuIFtdO1xyXG4gICAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgcHJvZHVjdHMgYnkgY2F0ZWdvcnk6JywgZXJyb3IpO1xyXG4gICAgICByZXR1cm4gW107XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgYXN5bmMgZ2V0UHJvZHVjdEJ5SWQoaWQ6IG51bWJlcik6IFByb21pc2U8UHJvZHVjdCB8IG51bGw+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMS9wcm9kdWN0cy8ke2lkfWApO1xyXG4gICAgICBpZiAoIXJlc3BvbnNlLm9rKSByZXR1cm4gbnVsbDtcclxuICAgICAgcmV0dXJuIGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIHByb2R1Y3Q6JywgZXJyb3IpO1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIE9wY2lvbmFsOiBNw6l0b2RvIHBhcmEgb2J0ZW5lciB0b2RvcyBsb3MgcHJvZHVjdG9zXHJcbiAgc3RhdGljIGFzeW5jIGdldEFsbFByb2R1Y3RzKCk6IFByb21pc2U8UHJvZHVjdFtdPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwOi8vbG9jYWxob3N0OjMwMDEvcHJvZHVjdHMnKTtcclxuICAgICAgaWYgKCFyZXNwb25zZS5vaykgcmV0dXJuIFtdO1xyXG4gICAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgYWxsIHByb2R1Y3RzOicsIGVycm9yKTtcclxuICAgICAgcmV0dXJuIFtdO1xyXG4gICAgfVxyXG4gIH1cclxufSJdLCJuYW1lcyI6WyJQcm9kdWN0U2VydmljZSIsImdldFByb2R1Y3RzQnlDYXRlZ29yeSIsImNhdGVnb3J5IiwicmVzcG9uc2UiLCJmZXRjaCIsIm9rIiwianNvbiIsImVycm9yIiwiY29uc29sZSIsImdldFByb2R1Y3RCeUlkIiwiaWQiLCJnZXRBbGxQcm9kdWN0cyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./services/productService.ts\n"));

/***/ })

});